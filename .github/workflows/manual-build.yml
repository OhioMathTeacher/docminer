name: Manual Build All Platforms

on:
  workflow_dispatch:

permissions:
  contents: write
  actions: read
  packages: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            name: ResearchBuddy-5.1.1-linux
            archive: tar.gz
          - os: windows-latest  
            platform: windows
            name: ResearchBuddy-5.1.1-windows
            archive: zip
          - os: macos-latest
            platform: macos
            name: ResearchBuddy-5.1.1-macos
            archive: zip

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Set up Python for macOS
      if: matrix.os == 'macos-latest'
      run: |
        # Building for native architecture (ARM64)
        # Will run on Intel Macs via Rosetta 2
        python --version
        python -c "import platform; print(f'Architecture: {platform.machine()}')"
        
    - name: Install system dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgl1 \
          libxrandr2 \
          libxss1 \
          libxcursor1 \
          libxcomposite1 \
          libasound2t64 \
          libxi6 \
          libxtst6 \
          libfontconfig1 \
          libxrender1 \
          libdbus-1-3 \
          libxkbcommon-x11-0 \
          libxkbcommon0
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Build executable
      run: |
        python -m PyInstaller build_files/ResearchBuddy5.1.1.spec --distpath ./dist --workpath ./build --clean --noconfirm
        
    - name: Create distribution package
      shell: bash
      run: |
        mkdir -p releases
        
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          # Windows: Create ZIP
          cd dist
          powershell Compress-Archive -Path ResearchBuddy5.1.1 -DestinationPath ../releases/${{ matrix.name }}.zip
        elif [ "${{ matrix.os }}" = "macos-latest" ]; then
          # macOS: Create professional DMG installer
          
          # First verify .app was created
          if [ ! -d "dist/ResearchBuddy5.1.1.app" ]; then
            echo "❌ Error: .app bundle not found"
            ls -la dist/
            exit 1
          fi
          
          # Create DMG temp directory
          mkdir -p dmg-temp
          cp -R dist/ResearchBuddy5.1.1.app dmg-temp/
          ln -s /Applications dmg-temp/Applications
          
          # Copy Quick Start guide if available
          if [ -f "docs/QUICK_START_FOR_GAS.md" ]; then
            cp docs/QUICK_START_FOR_GAS.md dmg-temp/"Quick Start Guide.md"
          fi
          
          # Create the DMG
          hdiutil create \
            -volname "ResearchBuddy 5.1.1" \
            -srcfolder dmg-temp \
            -ov -format UDZO \
            releases/${{ matrix.name }}.dmg
          
          # Clean up
          rm -rf dmg-temp
          
          echo "✅ Created ${{ matrix.name }}.dmg"
          ls -lh releases/
        else
          # Linux: Create tar.gz AND AppImage
          cd dist
          tar -czf ../releases/${{ matrix.name }}.tar.gz ResearchBuddy5.1.1
          
          # Create AppImage
          cd ..
          
          # Install appimagetool
          wget -q https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage
          
          # Create AppDir structure
          mkdir -p ResearchBuddy.AppDir/usr/bin
          cp -r dist/ResearchBuddy5.1.1/* ResearchBuddy.AppDir/usr/bin/
          
          # Create AppRun script
          echo '#!/bin/bash' > ResearchBuddy.AppDir/AppRun
          echo 'SELF=$(readlink -f "$0")' >> ResearchBuddy.AppDir/AppRun
          echo 'HERE=${SELF%/*}' >> ResearchBuddy.AppDir/AppRun
          echo 'export LD_LIBRARY_PATH="${HERE}/usr/bin:${LD_LIBRARY_PATH}"' >> ResearchBuddy.AppDir/AppRun
          echo 'exec "${HERE}/usr/bin/ResearchBuddy5.1.1" "$@"' >> ResearchBuddy.AppDir/AppRun
          chmod +x ResearchBuddy.AppDir/AppRun
          
          # Create desktop file
          mkdir -p ResearchBuddy.AppDir/usr/share/applications
          echo '[Desktop Entry]' > ResearchBuddy.AppDir/usr/share/applications/researchbuddy.desktop
          echo 'Type=Application' >> ResearchBuddy.AppDir/usr/share/applications/researchbuddy.desktop
          echo 'Name=Research Buddy' >> ResearchBuddy.AppDir/usr/share/applications/researchbuddy.desktop
          echo 'Exec=ResearchBuddy5.1.1' >> ResearchBuddy.AppDir/usr/share/applications/researchbuddy.desktop
          echo 'Icon=researchbuddy' >> ResearchBuddy.AppDir/usr/share/applications/researchbuddy.desktop
          echo 'Categories=Education;' >> ResearchBuddy.AppDir/usr/share/applications/researchbuddy.desktop
          
          # Build AppImage
          ARCH=x86_64 ./appimagetool-x86_64.AppImage ResearchBuddy.AppDir releases/ResearchBuddy-5.1.1-x86_64.AppImage || echo "AppImage creation failed, continuing with tar.gz only"
        fi
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.name }}
        path: releases/*
        retention-days: 90

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    permissions:
      contents: write
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Display and flatten artifacts
      run: |
        echo "📦 Downloaded artifacts:"
        ls -R artifacts
        
        echo ""
        echo "📂 Flattening structure..."
        mkdir -p release-files
        find artifacts -type f \( -name "*.zip" -o -name "*.tar.gz" -o -name "*.dmg" -o -name "*.AppImage" \) -exec cp {} release-files/ \;
        
        echo ""
        echo "✅ Files ready for release:"
        ls -lh release-files/

    - name: Checkout code (for tagging)
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ github.token }}

    - name: Create or verify tag
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        
        if git rev-parse v5.1.1 >/dev/null 2>&1; then
          echo "✅ Tag v5.1.1 already exists"
        else
          echo "📝 Creating tag v5.1.1"
          git tag -a v5.1.1 -m "Release v5.1.1"
          git push origin v5.1.1
        fi

    - name: Create or Update Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v5.1.1
        name: Research Buddy 5.1.1 - Professional Cross-Platform Installers
        draft: false
        prerelease: false
        files: release-files/*
        fail_on_unmatched_files: true
        generate_release_notes: false
        body: |
          # 🚀 Research Buddy 5.1.1 - Professional Cross-Platform Release
          
          **Professional installers for all platforms - just download and run!**
          
          ## 📥 Downloads
          
          ### macOS 🍎
          **ResearchBuddy-5.1.1.dmg** (Recommended)
          - Double-click DMG → Drag app to Applications → Done!
          - Professional installer with all fixes included
          
          ### Windows 🪟
          **ResearchBuddy-5.1.1-windows.zip**
          - Extract → Double-click `.exe` → Run!
          - If Windows Defender warns: Click "More info" → "Run anyway"
          
          ### Linux 🐧
          **ResearchBuddy-5.1.1-x86_64.AppImage** (Recommended)
          - `chmod +x ResearchBuddy-5.1.1-x86_64.AppImage`
          - `./ResearchBuddy-5.1.1-x86_64.AppImage`
          - Works on all distros!
          
          **ResearchBuddy-5.1.1-linux.tar.gz** (Alternative)
          - Extract → Run `./ResearchBuddy5.1.1`
          
          ---
          
          ## ✨ What's New in 5.1.1
          
          - ✅ **macOS DMG installer** - Professional drag-to-install experience
          - ✅ **Linux AppImage** - Runs on any distro without dependencies  
          - ✅ **Fixed read-only filesystem errors** on macOS
          - ✅ **Updated copyright** to Michael Todd Edwards
          - ✅ **Auto-loads Quick Start guide** on first run
          - ✅ **Improved About dialog** with license and GitHub info
          
          ## 🎯 Features
          
          - Professional PDF viewer with text selection
          - AI-assisted positionality detection (optional - requires OpenAI API key)
          - Manual analysis mode (works without any API keys)
          - Evidence collection and quote extraction
          - GitHub integration for training reports
          - Secure configuration management
          
          ## 📜 License
          
          Creative Commons Attribution-NonCommercial 4.0  
          © 2025 Michael Todd Edwards (OhioMathTeacher)  
          Academic and educational use freely permitted.
          
          ---
          
          **Perfect for Graduate Assistants - No Python, no terminal, no setup!**
