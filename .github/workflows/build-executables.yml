name: 🚀 Build Research Buddy Executables

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            name: ResearchBuddy-linux
          - os: windows-latest
            platform: windows  
            name: ResearchBuddy-windows
          - os: macos-latest
            platform: macos
            name: ResearchBuddy-macos

    runs-on: ${{ matrix.os }}
    
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4

    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: 🔨 Build Windows Executable  
      if: matrix.platform == 'windows'
      run: |
        python -m PyInstaller --onefile --noconsole --name "ResearchBuddy" enhanced_training_interface.py
        mkdir release
        copy dist\ResearchBuddy.exe release\
        copy README.md release\
        copy QUICK_START_FOR_GAS.md release\

    - name: 🔨 Build Linux Executable
      if: matrix.platform == 'linux'
      run: |
        python -m PyInstaller --onefile --name "ResearchBuddy" enhanced_training_interface.py
        mkdir release
        cp dist/ResearchBuddy release/
        cp README.md release/
        cp QUICK_START_FOR_GAS.md release/
        chmod +x release/ResearchBuddy

    - name: 🔨 Build macOS Executable (Apple Silicon)
      if: matrix.platform == 'macos'
      run: |
        echo "Building for Apple Silicon/ARM64..."
        python -m PyInstaller build_files/ResearchBuddy5.2.spec \
          --distpath ./dist \
          --workpath ./build \
          --clean \
          --noconfirm
        
        echo "Verifying architecture..."
        file dist/ResearchBuddy5.2.app/Contents/MacOS/ResearchBuddy5.2
        
        echo "Creating DMG..."
        mkdir -p dmg-temp
        cp -R dist/ResearchBuddy5.2.app dmg-temp/
        ln -s /Applications dmg-temp/Applications
        
        hdiutil create \
          -volname "ResearchBuddy 5.2" \
          -srcfolder dmg-temp \
          -ov -format UDZO \
          ResearchBuddy-5.2.dmg
        
        rm -rf dmg-temp
        
        echo "DMG created successfully!"
        ls -lh ResearchBuddy-5.2.dmg

    - name: 📦 Create Package
      shell: bash
      run: |
        if [ "${{ matrix.platform }}" = "windows" ]; then
          cd release
          7z a "../${{ matrix.name }}.zip" *
        elif [ "${{ matrix.platform }}" = "macos" ]; then
          # DMG already created, just move it
          mkdir -p release
          mv ResearchBuddy-5.2.dmg release/${{ matrix.name }}.dmg
        else
          cd release
          tar -czf "../${{ matrix.name }}.tar.gz" *
        fi

    - name: 📤 Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.name }}
        path: ${{ matrix.name }}.*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: 📥 Download Artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: 🏷️ Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/**/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 📋 Prepare Release Assets
      run: |
        mkdir -p release-assets
        find artifacts -name "*.zip" -exec cp {} release-assets/ \;
        find artifacts -name "*.tar.gz" -exec cp {} release-assets/ \;
        ls -la release-assets/

    - name: 📝 Generate Release Notes
      run: |
        cat > release-notes.md << EOF
        # 🚀 Research Buddy 3.1 Release
        
        ## Enhanced Training Interface with Standalone Executables
        
        **Perfect for Graduate Assistants - No technical setup required!**
        
        ### 📥 Downloads
        - **macOS**: ResearchBuddy3.1-macos.zip (Universal Binary)
        - **Windows**: ResearchBuddy3.1-windows.zip (64-bit)
        - **Linux**: ResearchBuddy3.1-linux.tar.gz (64-bit)
        
        ### ✨ What's New in 3.1
        - **📄 Page Navigation**: Navigate multi-page PDFs with ◀ ▶ buttons
        - **🔧 API Key Management**: Configure OpenAI keys directly in the GUI
        - **🛡️ Better Error Handling**: Helpful instructions when setup needed
        - **📦 Standalone Executables**: Just download, extract, and run!
        
        ### 🎯 Key Features
        - **Professional PDF Viewer**: Built-in viewer with text selection
        - **AI-Assisted Analysis**: Optional OpenAI integration for pre-screening
        - **Manual Analysis Mode**: Works great without AI for complete independence
        - **Evidence Collection**: Easy text selection and quote extraction
        - **GitHub Integration**: Direct upload of training decisions
        
        ### 🚀 Quick Start
        1. Download the file for your operating system
        2. Extract/unzip the files  
        3. Double-click the executable to run
        4. See QUICK_START_FOR_GAS.md for detailed instructions
        
        ### 📊 Perfect for Research Teams
        - No Python installation required
        - No command line knowledge needed
        - Professional interface for academic paper analysis
        - Scales from individual researchers to large institutions
        
        ### 📚 Documentation Included
        - Quick Start Guide for Graduate Assistants
        - Complete setup and usage instructions
        - Troubleshooting and FAQ
        
        For technical support or questions, please open an issue in this repository.
        EOF

    - name: 🏷️ Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        body_path: release-notes.md
        files: release-assets/*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 📊 Release Summary
      run: |
        echo "🎉 Release Created Successfully!"
        echo "📦 Assets included:"
        ls -la release-assets/
        echo ""
        echo "🔗 View release at: ${{ github.server_url }}/${{ github.repository }}/releases"