name: Build Research Buddy Cross-Platform

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            artifact-name: ResearchBuddy5.2-linux
            executable-ext: ""
          - os: windows-latest  
            platform: windows
            artifact-name: ResearchBuddy5.2-windows
            executable-ext: ".exe"
          - os: macos-latest
            platform: macos
            artifact-name: ResearchBuddy5.2-macos
            executable-ext: ""

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgl1-mesa-glx \
          libxrandr2 \
          libxss1 \
          libxcursor1 \
          libxcomposite1 \
          libasound2 \
          libxi6 \
          libxtst6 \
          libfontconfig1 \
          libxrender1 \
          libdbus-1-3 \
          libxkbcommon-x11-0 \
          libxkbcommon0
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Build executable
      run: |
        python -m PyInstaller build_files/ResearchBuddy5.2.spec --distpath ./dist --workpath ./build
        
    - name: Verify build
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          ls -la dist/ResearchBuddy5.2/
          file dist/ResearchBuddy5.2/ResearchBuddy5.2.exe || echo "Windows executable created"
        else
          ls -la dist/ResearchBuddy5.2/
          file dist/ResearchBuddy5.2/ResearchBuddy5.2 || echo "Unix executable created"
        fi
        
    - name: Create distribution package
      run: |
        mkdir -p releases
        cp -r dist/ResearchBuddy5.2 releases/${{ matrix.artifact-name }}
        
        # Copy documentation
        cp README.md releases/${{ matrix.artifact-name }}/
        cp requirements.txt releases/${{ matrix.artifact-name }}/
        
        # Copy sample PDFs if they exist
        if [ -d "sample_pdfs" ]; then
          cp -r sample_pdfs releases/${{ matrix.artifact-name }}/
        fi
        
        # Copy documentation if it exists
        if [ -d "docs" ]; then
          cp -r docs releases/${{ matrix.artifact-name }}/
        fi
        
        # Create archive
        cd releases
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          zip -r ${{ matrix.artifact-name }}.zip ${{ matrix.artifact-name }}
        else
          tar -czf ${{ matrix.artifact-name }}.tar.gz ${{ matrix.artifact-name }}
        fi
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact-name }}
        path: releases/${{ matrix.artifact-name }}*
        retention-days: 30

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: ./artifacts
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Research Buddy ${{ github.ref }}
        body: |
          # Research Buddy 5.1 Release
          
          ## What's New
          - Streamlined API key entry with individual dialogs
          - Removed complex tabbed setup dialog
          - Improved cross-platform building
          - Enhanced stability and user experience
          
          ## Downloads
          Choose the version for your operating system:
          
          - **Linux**: ResearchBuddy5.1-linux.tar.gz
          - **Windows**: ResearchBuddy5.1-windows.zip  
          - **macOS**: ResearchBuddy5.1-macos.tar.gz
          
          ## Installation
          1. Download the appropriate file for your OS
          2. Extract the archive
          3. Run the executable
          4. Configure API keys through the simple dialog or Configuration menu
          
          ## Requirements
          - OpenAI API key (for AI analysis)
          - GitHub Personal Access Token (optional, for report uploads)
          
        draft: false
        prerelease: false
        
    - name: Upload Linux Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/ResearchBuddy5.2-linux/ResearchBuddy5.2-linux.tar.gz
        asset_name: ResearchBuddy5.2-linux.tar.gz
        asset_content_type: application/gzip
        
    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/ResearchBuddy5.2-windows/ResearchBuddy5.2-windows.zip
        asset_name: ResearchBuddy5.2-windows.zip
        asset_content_type: application/zip
        
    - name: Upload macOS Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/ResearchBuddy5.2-macos/ResearchBuddy5.2-macos.tar.gz
        asset_name: ResearchBuddy5.2-macos.tar.gz
        asset_content_type: application/gzip